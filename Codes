folder structure
/apka-dhan-backend
├── models/
│   └── Transaction.js
├── routes/
│   └── transactions.js
├── controllers/
│   └── transactionController.js
├── app.js
└── .env


sample transaction model
// models/Transaction.js
const mongoose = require('mongoose');

const TransactionSchema = new mongoose.Schema({
  userId: { type: mongoose.Schema.Types.ObjectId, required: true },
  type: { type: String, enum: ['income', 'expense'], required: true },
  amount: { type: Number, required: true },
  category: String,
  date: { type: Date, default: Date.now },
  paymentMode: String,
  tagForTaxClaim: { type: Boolean, default: false }
});

module.exports = mongoose.model('Transaction', TransactionSchema);


transaction controller
// controllers/transactionController.js
const Transaction = require('../models/Transaction');

exports.addTransaction = async (req, res) => {
  try {
    const txn = new Transaction(req.body);
    await txn.save();
    res.status(201).json(txn);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
};

exports.getTransactions = async (req, res) => {
  try {
    const txns = await Transaction.find({ userId: req.params.userId });
    res.status(200).json(txns);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
};

transaction routes 
// routes/transactions.js
const express = require('express');
const router = express.Router();
const { addTransaction, getTransactions } = require('../controllers/transactionController');

router.post('/add', addTransaction);
router.get('/user/:userId', getTransactions);

module.exports = router;

hook into main app
// app.js
const express = require('express');
const mongoose = require('mongoose');
const dotenv = require('dotenv');
const transactionRoutes = require('./routes/transactions');

dotenv.config();
const app = express();

app.use(express.json());
app.use('/api/transactions', transactionRoutes);

mongoose.connect(process.env.MONGO_URI, () => {
  console.log('MongoDB connected');
  app.listen(5000, () => console.log('Server running on port 5000'));
});
